local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Rayfield Example Window",
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})

local Tab = Window:CreateTab("Home", 4483362458)
local Paragraph = Tab:CreateParagraph({Title = "Good {time/Morning/Evening/Afternoon/Night}, {username}. Thanks for using my venox remake!", Content = "Paragraph Example"})

local function updateParagraph()
    local currentTime = os.date("%H:%M")
    local players = #game.Players:GetPlayers()
    local maxPlayers = game.GameSettings.MaxPlayers
    local placeId = game.PlaceId
    local accountAge = game.Players.LocalPlayer.AccountAge
    local accountId = game.Players.LocalPlayer.UserId
    local gameName = game.PlaceId -- Assuming PlaceId can be used to get the game name

    -- Determine the appropriate time of day greeting
    local hour = tonumber(os.date("%H"))
    local greeting
    if hour < 12 then
        greeting = "Morning"
    elseif hour < 17 then
        greeting = "Afternoon"
    elseif hour < 20 then
        greeting = "Evening"
    else
        greeting = "Night"
    end

    -- Update the paragraph
    Paragraph:Set({
        Title = string.format("Good %s, %s. Thanks for using my venox remake!", greeting, game.Players.LocalPlayer.Name),
        Content = string.format([[
Time: [ %s ]
Players in server: [ %d/%d ]
Place ID: [ %d ]
Account Age: [ %d days ]
Account ID: [ %d ]
Game Name: [ %s ]]],
        currentTime, players, maxPlayers, placeId, accountAge, accountId, gameName)
    })
end

-- Call the update function to set the initial content
updateParagraph()

-- Optionally update at intervals
while true do
    updateParagraph()
    wait(0.1) -- Update every 60 seconds
end
